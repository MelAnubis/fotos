/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.17.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExifResponseDto } from './ExifResponseDto';
import {
    ExifResponseDtoFromJSON,
    ExifResponseDtoFromJSONTyped,
    ExifResponseDtoToJSON,
} from './ExifResponseDto';
import type { SmartInfoResponseDto } from './SmartInfoResponseDto';
import {
    SmartInfoResponseDtoFromJSON,
    SmartInfoResponseDtoFromJSONTyped,
    SmartInfoResponseDtoToJSON,
} from './SmartInfoResponseDto';

/**
 * 
 * @export
 * @interface AssetResponseDto
 */
export interface AssetResponseDto {
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    deviceAssetId: string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    ownerId: string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    deviceId: string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    type: AssetResponseDtoTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    originalPath: string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    resizePath: string | null;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    modifiedAt: string;
    /**
     * 
     * @type {boolean}
     * @memberof AssetResponseDto
     */
    isFavorite: boolean;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    mimeType: string | null;
    /**
     * 
     * @type {string}
     * @memberof AssetResponseDto
     */
    duration: string;
    /**
     * 
     * @type {ExifResponseDto}
     * @memberof AssetResponseDto
     */
    exifInfo?: ExifResponseDto;
    /**
     * 
     * @type {SmartInfoResponseDto}
     * @memberof AssetResponseDto
     */
    smartInfo?: SmartInfoResponseDto;
}


/**
 * @export
 */
export const AssetResponseDtoTypeEnum = {
    Image: 'IMAGE',
    Video: 'VIDEO',
    Audio: 'AUDIO',
    Other: 'OTHER'
} as const;
export type AssetResponseDtoTypeEnum = typeof AssetResponseDtoTypeEnum[keyof typeof AssetResponseDtoTypeEnum];


/**
 * Check if a given object implements the AssetResponseDto interface.
 */
export function instanceOfAssetResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "deviceAssetId" in value;
    isInstance = isInstance && "ownerId" in value;
    isInstance = isInstance && "deviceId" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "originalPath" in value;
    isInstance = isInstance && "resizePath" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "modifiedAt" in value;
    isInstance = isInstance && "isFavorite" in value;
    isInstance = isInstance && "mimeType" in value;
    isInstance = isInstance && "duration" in value;

    return isInstance;
}

export function AssetResponseDtoFromJSON(json: any): AssetResponseDto {
    return AssetResponseDtoFromJSONTyped(json, false);
}

export function AssetResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'deviceAssetId': json['deviceAssetId'],
        'ownerId': json['ownerId'],
        'deviceId': json['deviceId'],
        'type': json['type'],
        'originalPath': json['originalPath'],
        'resizePath': json['resizePath'],
        'createdAt': json['createdAt'],
        'modifiedAt': json['modifiedAt'],
        'isFavorite': json['isFavorite'],
        'mimeType': json['mimeType'],
        'duration': json['duration'],
        'exifInfo': !exists(json, 'exifInfo') ? undefined : ExifResponseDtoFromJSON(json['exifInfo']),
        'smartInfo': !exists(json, 'smartInfo') ? undefined : SmartInfoResponseDtoFromJSON(json['smartInfo']),
    };
}

export function AssetResponseDtoToJSON(value?: AssetResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'deviceAssetId': value.deviceAssetId,
        'ownerId': value.ownerId,
        'deviceId': value.deviceId,
        'type': value.type,
        'originalPath': value.originalPath,
        'resizePath': value.resizePath,
        'createdAt': value.createdAt,
        'modifiedAt': value.modifiedAt,
        'isFavorite': value.isFavorite,
        'mimeType': value.mimeType,
        'duration': value.duration,
        'exifInfo': ExifResponseDtoToJSON(value.exifInfo),
        'smartInfo': SmartInfoResponseDtoToJSON(value.smartInfo),
    };
}

