/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.17.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ServerInfoResponseDto,
  ServerPingResponse,
  ServerVersionReponseDto,
} from '../models';
import {
    ServerInfoResponseDtoFromJSON,
    ServerInfoResponseDtoToJSON,
    ServerPingResponseFromJSON,
    ServerPingResponseToJSON,
    ServerVersionReponseDtoFromJSON,
    ServerVersionReponseDtoToJSON,
} from '../models';

/**
 * 
 */
export class ServerInfoApi extends runtime.BaseAPI {

    /**
     */
    async serverInfoControllerGetServerInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServerInfoResponseDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/server-info`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ServerInfoResponseDtoFromJSON(jsonValue));
    }

    /**
     */
    async serverInfoControllerGetServerInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServerInfoResponseDto> {
        const response = await this.serverInfoControllerGetServerInfoRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async serverInfoControllerGetServerPulseRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServerPingResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/server-info/ping`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ServerPingResponseFromJSON(jsonValue));
    }

    /**
     */
    async serverInfoControllerGetServerPulse(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServerPingResponse> {
        const response = await this.serverInfoControllerGetServerPulseRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async serverInfoControllerGetServerVersionRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServerVersionReponseDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/server-info/version`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ServerVersionReponseDtoFromJSON(jsonValue));
    }

    /**
     */
    async serverInfoControllerGetServerVersion(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServerVersionReponseDto> {
        const response = await this.serverInfoControllerGetServerVersionRaw(initOverrides);
        return await response.value();
    }

}
